<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ir.snapppay</groupId>
    <artifactId>paymentgateway</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>paymentgateway</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>21</java.version>
        <plugins.flyway.version>10.12.0</plugins.flyway.version>
        <plugins.jooq.version>3.19.8</plugins.jooq.version>
        <docker-maven-plugin>0.44.0</docker-maven-plugin>
        <postgres.image>postgres:16</postgres.image>
        <postgres.host>localhost</postgres.host>
        <db.name>projectx</db.name>
        <db.port>5432</db.port>
        <db.url>jdbc:postgresql://${postgres.host}:${db.port}/${db.name}</db.url>
        <db.username>ppg</db.username>
        <db.password>ppg</db.password>

    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Flyway Maven Plugin -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${plugins.flyway.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <url>${db.url}</url>
                    <user>${db.username}</user>
                    <password>${db.password}</password>
                    <locations>
                        <location>filesystem:src/main/resources/db/migration</location>
                    </locations>
                </configuration>
            </plugin>

            <!-- jOOQ Maven Plugin -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${plugins.jooq.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <jdbc>
                        <url>${db.url}</url>
                        <user>${db.username}</user>
                        <password>${db.password}</password>
                    </jdbc>
                    <generator>
                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes>flyway_schema_history</excludes>
                            <inputSchema>public</inputSchema>
                            <forcedTypes>
                                <forcedType>
                                    <objectType>COLUMN</objectType>
                                    <nullability>ALL</nullability>
                                    <includeTypes>(?i:TIMESTAMPTZ)</includeTypes>
                                    <name>INSTANT</name>
                                </forcedType>
                            </forcedTypes>
                            <recordVersionFields>version</recordVersionFields>
                        </database>

                        <generate>
                            <pojos>true</pojos>
                            <daos>true</daos>
                            <fluentSetters>true</fluentSetters>
                        </generate>

                        <target>
                            <packageName>ir.snapppay.paymentgateway.models</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin}</version>
                <configuration>
                    <containerNamePattern>%a-%i</containerNamePattern>
                    <images>
                        <image>
                            <alias>ppg-postgres</alias>
                            <name>${postgres.image}</name>
                            <run>
                                <ports>
                                    <port>db.port:5432</port>
                                </ports>
                                <wait>
                                    <time>7000</time>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>POSTGRES |</prefix>
                                    <date>Default</date>
                                    <color>cyan</color>
                                </log>
                                <env>
                                    <POSTGRES_DB>${db.name}</POSTGRES_DB>
                                    <POSTGRES_USER>${db.username}</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                                </env>
                            </run>
                        </image>
                    </images>
                </configuration>

                <!-- Connect start/stop to validate and compile phase, respectively-->
                <executions>
                    <execution>
                        <id>start-after-initialize</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-after-generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
